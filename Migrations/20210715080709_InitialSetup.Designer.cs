// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Rhea.Service;

namespace Rhea.Migrations
{
    [DbContext(typeof(RheaContext))]
    [Migration("20210715080709_InitialSetup")]
    partial class InitialSetup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Rhea.Service.Actions.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MapImage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("NavSectionId")
                        .HasColumnType("integer");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NavSectionId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Rhea.Service.Actions.NavSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("NavItem")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SectionHeader")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SectionTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SectionVideoUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("NavSections");
                });

            modelBuilder.Entity("Rhea.Service.Actions.OurService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("NavSectionId")
                        .HasColumnType("integer");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NavSectionId");

                    b.ToTable("OurServices");
                });

            modelBuilder.Entity("Rhea.Service.Actions.Reference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("NavSectionId")
                        .HasColumnType("integer");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NavSectionId");

                    b.ToTable("References");
                });

            modelBuilder.Entity("Rhea.Service.Actions.Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Alt")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Headline")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<bool>("ImgStart")
                        .HasColumnType("boolean");

                    b.Property<bool>("LightBg")
                        .HasColumnType("boolean");

                    b.Property<int?>("NavSectionId")
                        .HasColumnType("integer");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<string>("TopLine")
                        .HasColumnType("text");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NavSectionId");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("Rhea.Service.Actions.Contact", b =>
                {
                    b.HasOne("Rhea.Service.Actions.NavSection", "NavSection")
                        .WithMany()
                        .HasForeignKey("NavSectionId");

                    b.Navigation("NavSection");
                });

            modelBuilder.Entity("Rhea.Service.Actions.OurService", b =>
                {
                    b.HasOne("Rhea.Service.Actions.NavSection", "NavSection")
                        .WithMany()
                        .HasForeignKey("NavSectionId");

                    b.Navigation("NavSection");
                });

            modelBuilder.Entity("Rhea.Service.Actions.Reference", b =>
                {
                    b.HasOne("Rhea.Service.Actions.NavSection", "NavSection")
                        .WithMany()
                        .HasForeignKey("NavSectionId");

                    b.Navigation("NavSection");
                });

            modelBuilder.Entity("Rhea.Service.Actions.Section", b =>
                {
                    b.HasOne("Rhea.Service.Actions.NavSection", "NavSection")
                        .WithMany()
                        .HasForeignKey("NavSectionId");

                    b.Navigation("NavSection");
                });
#pragma warning restore 612, 618
        }
    }
}
